@page "/login"
@using CelHost.Fronter.Components
@using MudBlazor
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject HttpClient HttpClient
@inject ISnackbar Snackbar
<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudCard Elevation="4">
        <MudCardHeader>
            <MudText Typo="Typo.h5" Align="Align.Center">登录</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@isValid">
                <MudTextField T="string" Label="用户名" @bind-Value="model.Username" Required="true"
                              Variant="Variant.Outlined" Margin="Margin.Dense" Class="mb-4" />
                <MudTextField T="string" Label="密码" @bind-Value="model.Password" Required="true"
                              InputType="InputType.Password" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mb-4" />
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="!isValid"
                           Size="Size.Large" FullWidth="true" OnClick="HandleLogin">
                    登录
                </MudButton>
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudText Align="Align.Center" Class="mb-4">
                <MudLink @onclick="OpenAuthDialog">授权</MudLink>
            </MudText>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    private MudForm form;
    private bool isValid;
    private LoginModel model = new();

    private class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    private async Task HandleLogin()
    {
        // 这里可以添加登录逻辑，例如调用 API
        // 示例：打印用户名和密码到控制台
        Console.WriteLine($"用户名: {model.Username}, 密码: {model.Password}");
        // 实际项目中，你可能需要导航到主页或处理身份验证
        // 例如：NavigationManager.NavigateTo("/");
    }
    private async Task OpenAuthDialog()
    {
        var dialog = await DialogService.ShowAsync<AuthDialog>("授权文件上传");
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            Snackbar.Add("文件上传成功", Severity.Success);
        }
    }
}